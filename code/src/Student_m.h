//
// Generated file, do not edit! Created by opp_msgtool 6.0 from Student.msg.
//

#ifndef __STUDENT_M_H
#define __STUDENT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class Student;
/**
 * Class generated from <tt>Student.msg:2</tt> by opp_msgtool.
 * <pre>
 * message Student
 * {
 *     int numQuestions;
 *     double t;
 * }
 * </pre>
 */
class Student : public ::omnetpp::cMessage
{
  protected:
    int numQuestions = 0;
    double t = 0;
    int ID;
    int queueLengthProf = 0;
    double startingWaitingTime = 0;
    double waitingTime = 0;
    double examinationTime = 0;

  private:
    void copy(const Student& other);

  protected:
    bool operator==(const Student&) = delete;

  public:
    Student(const char *name=nullptr, short kind=0);
    Student(const Student& other);
    Student(int); // ---
    virtual ~Student();
    Student& operator=(const Student& other);
    virtual Student *dup() const override {return new Student(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getNumQuestions() const; // ---
    virtual void setNumQuestions(int); // ---

    virtual double getT() const; // ---
    virtual void setT(double); // ---

    virtual double getWaitingTime() const;      //--
    virtual void setWaitingTime(double);        //--

    virtual double getStartingWaitingTime() const;      //--
    virtual void setStartingWaitingTime(double);        //--

    virtual double getExaminationTime() const;      //--
    virtual void setExaminationTime(double);        //--

    virtual int getQueueLengthProf() const;      //--
    virtual void setQueueLengthProf(int);        //--

};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Student& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Student& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline Student *fromAnyPtr(any_ptr ptr) { return check_and_cast<Student*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __STUDENT_M_H

